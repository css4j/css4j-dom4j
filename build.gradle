plugins {
	id 'css4j.java-conventions'
	id 'de.jjohannes.extra-java-module-info'
}

java {
	registerFeature('xmlpull') {
		usingSourceSet(sourceSets.main)
	}
	registerFeature('useragent') {
		usingSourceSet(sourceSets.main)
	}
}

dependencies {
	api project(':css4j')
	useragentImplementation project(':css4j-agent')
	/*
	 * Any dom4j version can be used, but tests may not pass with versions prior
	 * to 2.1.1, due to changes in dom4j's defaults.
	 */
	api "org.dom4j:dom4j:${dom4jVersion}"
	xmlpullImplementation "xmlpull:xmlpull:${xmlpullVersion}"
	xmlpullImplementation "xpp3:xpp3_min:${xmlpullVersion}"
	testImplementation project(path: ':css4j', configuration: 'tests')
	testImplementation "jaxen:jaxen:${jaxenVersion}"
	testImplementation "org.slf4j:slf4j-api:${slf4jVersion}"
}

extraJavaModuleInfo {
	failOnMissingModuleInfo.set(false)
	automaticModule("dom4j-${dom4jVersion}.jar", 'dom4j')
	automaticModule("htmlparser-${htmlparserVersion}.jar", 'htmlparser')
}

description = 'css4j-dom4j'

tasks.register('testsJar', Jar) {
	archiveClassifier = 'tests'
	from(sourceSets.test.output)
}

configurations {
	tests
}

artifacts {
	tests testsJar
}

publishing.publications.maven.artifact(testsJar)

publishing.publications.maven(MavenPublication).pom {
	description = "CSS4J DOM4J module"
}
